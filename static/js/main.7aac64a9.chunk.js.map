{"version":3,"sources":["App.js","index.js"],"names":["App","useState","player1","setPlayer1","player2","setPlayer2","teamYellow","setTeamYellow","teamBlue","setTeamBlue","className","type","onChange","ev","target","value","autoFocus","onClick","drawList","push","Math","floor","random","length","console","log","Array","from","document","querySelectorAll","forEach","input","querySelector","focus","map","player","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAkGeA,MA/Ff,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGuBJ,mBAAS,IAHhC,mBAGNK,EAHM,KAGMC,EAHN,OAImBN,mBAAS,IAJ5B,mBAINO,EAJM,KAIIC,EAJJ,KAsCb,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,sDAGJ,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,2FAEF,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,8CACA,uBACEA,UAAU,SACVC,KAAK,OACLC,SAjDS,SAACC,GACpBV,EAAWU,EAAGC,OAAOC,QAiDXC,WAAW,OAGf,sBAAKN,UAAU,UAAf,UACE,8CACA,uBAAOC,KAAK,OAAOC,SAnDR,SAACC,GACpBR,EAAWQ,EAAGC,OAAOC,aAoDf,qBAAKL,UAAU,UAAf,SACE,wBAAQO,QAlDL,WACX,IAAIC,EAAW,GACfA,EAASC,KAAKjB,EAASE,GACLc,EAASE,KAAKC,MAAMD,KAAKE,SAAWJ,EAASK,WAC3CrB,GAClBK,EAAc,GAAD,mBAAKD,GAAL,CAAiBJ,KAC9BO,EAAY,GAAD,mBAAKD,GAAL,CAAeJ,OAE1BG,EAAc,GAAD,mBAAKD,GAAL,CAAiBF,KAC9BK,EAAY,GAAD,mBAAKD,GAAL,CAAeN,MAE5BsB,QAAQC,IAAInB,GACZkB,QAAQC,IAAIjB,GACZkB,MAAMC,KAAKC,SAASC,iBAAiB,UAAUC,SAC7C,SAACC,GAAD,OAAYA,EAAMhB,MAAQ,MAE5Ba,SAASI,cAAc,WAAWC,SAkC1B,6BAIN,sBAAKvB,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,UACE,8CACA,6BACGJ,EAAW4B,KAAI,SAACC,GACf,OAAO,6BAAyBA,GAAhBA,EAAOZ,gBAI7B,sBAAKb,UAAU,YAAf,UACE,2CACA,6BACGF,EAAS0B,KAAI,SAACC,GACb,OAAO,6BAAyBA,GAAhBA,EAAOZ,mBAK/B,qBAAKb,UAAU,gBAAf,SACE,wBAAQA,UAAU,aAAaO,QAtDvB,WACZR,EAAY,IACZF,EAAc,KAoDV,qCCtFR6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,W","file":"static/js/main.7aac64a9.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [player1, setPlayer1] = useState('');\n  const [player2, setPlayer2] = useState('');\n  const [teamYellow, setTeamYellow] = useState([]);\n  const [teamBlue, setTeamBlue] = useState([]);\n\n  const handleInput1 = (ev) => {\n    setPlayer1(ev.target.value);\n  };\n\n  const handleInput2 = (ev) => {\n    setPlayer2(ev.target.value);\n  };\n\n  const draw = () => {\n    let drawList = [];\n    drawList.push(player1, player2);\n    let drawnPlayer = drawList[Math.floor(Math.random() * drawList.length)];\n    if (drawnPlayer === player1) {\n      setTeamYellow([...teamYellow, player1]);\n      setTeamBlue([...teamBlue, player2]);\n    } else {\n      setTeamYellow([...teamYellow, player2]);\n      setTeamBlue([...teamBlue, player1]);\n    }\n    console.log(teamYellow);\n    console.log(teamBlue);\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n    document.querySelector('.input1').focus();\n  };\n\n  const clean = () => {\n    setTeamBlue([]);\n    setTeamYellow([]);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <header className=\"header__title\">\n          <h1>Sorteio de Times</h1>\n        </header>\n      </div>\n      <div className=\"input__players\">\n        <div className=\"input__players__text\">\n          <h3>Digite o nome de dois Jogadores da mesma posição!</h3>\n        </div>\n        <div className=\"input__players__input\">\n          <div className=\"player1\">\n            <label>JOGADOR 1</label>\n            <input\n              className=\"input1\"\n              type=\"text\"\n              onChange={handleInput1}\n              autoFocus={true}\n            />\n          </div>\n          <div className=\"player2\">\n            <label>JOGADOR 2</label>\n            <input type=\"text\" onChange={handleInput2} />\n          </div>\n          <div className=\"buttons\">\n            <button onClick={draw}>SORTEAR</button>\n          </div>\n        </div>\n      </div>\n      <div className=\"teams\">\n        <div className=\"team_yellow\">\n          <h2>Time Amarelo</h2>\n          <ul>\n            {teamYellow.map((player) => {\n              return <li key={player.length}>{player}</li>;\n            })}\n          </ul>\n        </div>\n        <div className=\"team_blue\">\n          <h2>Time Azul</h2>\n          <ul>\n            {teamBlue.map((player) => {\n              return <li key={player.length}>{player}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className=\"button_footer\">\n        <button className=\"draw_again\" onClick={clean}>\n          SORTEAR NOVAMENTE\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}